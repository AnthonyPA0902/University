import React, { useEffect, useState } from 'react';
import '../../admin_assets/css/medicalrecord.css';
import RecordModal from '../../components/RecordModal';


const MedicalRecord = () => {
    // State to hold all records and the selected record's details
    const [records, setRecords] = useState([]);
    const [selectedRecord, setSelectedRecord] = useState(null);
    const [isModalOpen, setIsModalOpen] = useState(false);

    // Fetch records on component mount
    useEffect(() => {
        const fetchRecords = async () => {
            try {
                const response = await fetch('https://localhost:7157/api/admin/record');
                const data = await response.json();

                if (data.success) {
                    setRecords(data.records);
                } else {
                    alert(data.message);
                }
            } catch (error) {
                console.error('Error fetching records:', error);
            }
        };

        fetchRecords();
    }, []);

    // Handle record selection from the dropdown
    const handleRecordSelect = (event) => {
        const recordId = event.target.value;
        const record = records.find((r) => r.id === parseInt(recordId));
        setSelectedRecord(record);
    };

    const handleUpdateRecord = (updatedRecord) => {
        // Update the records list (or handle the result as needed)
        const updatedRecords = records.map(record =>
            record.id === updatedRecord.id ? updatedRecord : record
        );
        setRecords(updatedRecords); // Update the records state
        setIsModalOpen(false); // Close the modal after submitting
    };

    // Open the modal when the button is clicked
    const handleOpenModal = () => {
        setIsModalOpen(true);
    };
    return (
        <div className="content">
            <h1>Hồ Sơ Khám Bệnh</h1>
            {/* Button to open the modal */}
            <div className="modal-open-button">
                <button className="record-button" onClick={handleOpenModal}>Tạo Hồ Sơ</button>
            </div>
            <div className="record-container">
                {/* Left: Dropdown to select a record */}
                <div className="dropdown-container">
                    <label htmlFor="recordDropdown">Vui Lòng Chọn Hồ Sơ:</label>
                    <select
                        className="record-select"
                        id="recordDropdown"
                        onChange={handleRecordSelect}
                        value={selectedRecord ? selectedRecord.id : ''}
                    >
                        <option value="" disabled></option>
                        {records.map((record) => (
                            <option key={record.id} value={record.id}>
                                {record.customerName} - {new Date(record.recordDate).toLocaleDateString()}
                            </option>
                        ))}
                    </select>
                </div>

                {/* Right: View for record details */}
                <div className="record-details-container">
                    {selectedRecord ? (
                        <div className="record-details">
                            <h2><i>Chi Tiết Hồ Sơ</i></h2>
                            <p><strong>Tên Khách Hàng:</strong> {selectedRecord.customerName}</p>
                            <p><strong>Ngày Lập Hồ Sơ:</strong> {new Date(selectedRecord.recordDate).toLocaleDateString()}</p>
                            {/* Add other fields from the record as needed */}
                            <p><strong>Thông Tin Chi Tiết:</strong> {selectedRecord.description}</p>
                            {/* Display Medicines List (Toa Thuoc) */}
                            <p><strong>Toa Thuốc:</strong></p>
                            <ul>
                                {selectedRecord.medicines.map(medicine => (
                                    <li key={medicine.medicineId}>
                                        {medicine.medicineName} - Số lượng: {medicine.quantity}
                                    </li>
                                ))}
                            </ul>
                        </div>
                    ) : (
                        <p>Hãy Chọn Một Hồ Sơ Để Xem Thông Tin.</p>
                    )}
                </div>
            </div>
            {/* Modal for viewing or editing a selected record */}
            <RecordModal
                isOpen={isModalOpen}
                onClose={() => setIsModalOpen(false)}
                onSubmit={handleUpdateRecord}
            />

        </div>
    );
};

export default MedicalRecord;
