import React, { useState, useEffect } from "react";
import '../../admin_assets/css/schedule.css';
import EquipmentModal from '../../components/EquipmentModal';
import Swal from 'sweetalert2';

const Equipment = () => {
    const [equipment, setEquipment] = useState([]);
    const [currentPage, setCurrentPage] = useState(1);
    const [totalPages, setTotalPages] = useState(1);
    const [totalCount, setTotalCount] = useState(0); // Total count of items
    const [selectedStatus, setSelectedStatus] = useState("");
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [editingEquipment, setEditingEquipment] = useState(null);

    useEffect(() => {
        fetchEquipmentData(currentPage, selectedStatus);
    }, [currentPage, selectedStatus]);

    const fetchEquipmentData = (page, status) => {
        const url = `https://localhost:7157/api/admin/equipment?page=${page}&pageSize=5${status ? `&status=${status}` : ''}`;

        fetch(url)
            .then((response) => response.json())
            .then((data) => {
                setEquipment(data.equipments);
                setTotalCount(data.totalCount); // Store the total count of items
                setTotalPages(Math.ceil(data.totalCount / 5)); // Calculate total pages based on total count
            })
            .catch((error) => console.error("Error fetching equipments:", error));
    };

    const handleStatusChange = (e) => {
        setSelectedStatus(e.target.value);
        setCurrentPage(1); // Reset to page 1 when status changes
    };

    const handlePaginationClick = (page) => {
        setCurrentPage(page);
    };

    const handleAddEquipment = (equipmentData) => {
        // Submit logic for adding equipment...
    };

    return (
        <div className="content">
            <div className="equipment-container">
                <h1>Danh sách thiết bị</h1>
                <button className="register-button" onClick={() => setIsModalOpen(true)}>
                    Thêm thiết bị mới
                </button>
                <br />
                <br />
                <select className="select-dropdown" value={selectedStatus} onChange={handleStatusChange}>
                    <option value="">All</option>
                    <option value="Đang Sử Dụng">Đang Sử Dụng</option>
                    <option value="Có Thể Dùng">Có Thể Dùng</option>
                    <option value="Bị Hư">Bị Hư</option>
                </select>
                <table className="equipment-table">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Tên thiết bị</th>
                            <th>Tình trạng</th>
                            <th>Ngày dọn dẹp</th>
                            <th>Bảo hành</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        {equipment.map((equipment, index) => (
                            <tr key={equipment.id}>
                                <td>{(currentPage - 1) * 5 + index + 1}</td>
                                <td>{equipment.name}</td>
                                <td>{equipment.status}</td>
                                <td>{equipment.cleaningTime}</td>
                                <td>{equipment.maintenance}</td>
                                <td style={{ textAlign: 'center' }}>
                                    <button onClick={() => handleEditClick(equipment.id)}>
                                        <img className="icon" src="/admin_assets/img/icon/edit-icon.png" alt="edit-icon" />
                                    </button>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;
                                    <button onClick={() => handleDeleteClick(equipment.id)}>
                                        <img className="icon" src="/admin_assets/img/icon/delete-icon.png" alt="delete-icon" />
                                    </button>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>

                {/* Pagination controls */}
                <div className="pagination">
                    {Array.from({ length: totalPages }, (_, index) => (
                        <button
                            key={index + 1}
                            onClick={() => handlePaginationClick(index + 1)}
                            className={index + 1 === currentPage ? 'active' : ''}
                        >
                            {index + 1}
                        </button>
                    ))}
                </div>

                <EquipmentModal
                    isOpen={isModalOpen}
                    onClose={() => setIsModalOpen(false)}
                    onSubmit={handleAddEquipment}
                    editingEquipment={editingEquipment}
                />
            </div>
        </div>
    );
};

export default Equipment;
