[HttpGet("record")]
public async Task<IActionResult> GetAllRecords(int page = 1, int pageSize = 12)
{
	var recordsQuery = _dbContext.MedicalRecords
		.Include(mr => mr.Customer)
		.Include(mr => mr.MedicalRecordMedicines)
			.ThenInclude(mmr => mmr.Medicine)
		.Select(mr => new MedicalRecordDto
		{
			Id = mr.Id,
			CheckUp = mr.Checkup,
			Treatment = mr.Treatment,
			Description = mr.Description,
			RecordDate = mr.RecordDate,
			CustomerId = mr.CustomerId,
			CustomerName = mr.Customer.Name,
			Medicines = mr.MedicalRecordMedicines.Select(mmr => new MedicineStorageDto
			{
				MedicineId = mmr.MedicineId,
				MedicineName = mmr.Medicine.Name,
				Quantity = mmr.Quantity,
				Note = mmr.Note
			}).ToList()
		});

	// Get the total number of records for pagination
	var totalRecords = await recordsQuery.CountAsync();

	// Apply pagination
	var records = await recordsQuery
		.Skip((page - 1) * pageSize)
		.Take(pageSize)
		.ToListAsync();

	if (records == null || records.Count == 0)
	{
		return BadRequest(new { success = false, message = "No records found" });
	}

	return Ok(new
	{
		success = true,
		Info = recordsQuery,
		Records = records,
		TotalRecords = totalRecords
	});
}